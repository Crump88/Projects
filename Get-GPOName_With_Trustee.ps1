<#

This script is utilized to pull Group Policy Objects directly from a Domain Controller.
The output will provide a CSV file with Group Policy Objects by name along with which
objects are within the Scope of that Policy.

<NEEDS List>:
1. Configure System Dialog to Save File Dynamically instead of Hardcoded

#>

# Retrieve all Group Policy Objects within the Domain
$GPO = Get-GPO -All

# Initialize Array to place the Custom Objects Created for Report
$ReportArray = @()

# Begin For Loop to Parse through GPOs
Foreach ($GPObject in $GPO)

{

 # $Trustee Variable used to Obtain the Security Filtering Scope based on Permission set "GPOApply"   
 $Trustee = Get-GPPermission -name $GPObject.DisplayName -all | Where Permission -eq GPOApply | Select Trustee

 # $Links Variable used to obtain the Scope Information of OU Link and OU Path. This Parses through an XML Report generated by Get-GPOReport
 $Links = Get-GPOReport -Name $GPObject.DisplayName -ReportType XML | % { ([xml]$_).gpo | Select Name,@{l="LinkedTo";e={$_.LinksTo | % {$_.SOMName}}},@{l="OUPath";e={$_.LinksTo | %{$_.SOMPATH}}}}
 
 # Custom Object to provide only the needed Headers/Information: GPO Name, Security Filtering, OU Link(s), and OU Path(s)
 $OutputObject = [PSCustomObject]@{

        'GPO' = $GPObject.DisplayName
        'Applied To' = (@($Trustee.Trustee.Name) -join ', ')
        'Linked To' = $Links.LinkedTo -join ', '
        'OU Path' = $Links.OUPath -join ', '
    }

# Enumerate the Report Array created with the Custom Objects on each iteration of the For Loop    
$ReportArray += $OutputObject

}

# Export the $ReportArray to a CSV file
$ReportArray | Export-CSV "C:\bin\GPOPWrShl.csv" -NoTypeInformation